package myproj;
import java.util.*;
public class mercury {
	public static ArrayList<merchant> merchants = new ArrayList<merchant>();

	public static void main(String[] args) {
	Scanner stdin = new Scanner(System.in);
	String k = stdin.next();
	
	
}
}


class item {
	private int id;
	private String name;
	private float price;
	private int quantity;
	private category category;
	private offer offer = null ;
	private boolean hasoffer = false;

	public item(int id, String name, float price, int quantity) {
		this.id = id;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		
	}
			
	public void display() {
		System.out.println(id + " " + name + " " + price + " " + quantity + " ");
		if(offer !=null) System.out.print(offer.getoffer() + " ");
		System.out.print(category.getcategory());
	}
	public int getid() {
		return id;
	}
	public float getprice() {
		return price;
	}
	public int getquantity() {
		return quantity;
	}
	public String getcategory() {
		return category.getcategory();
	}
	public String getoffer() {
		if(offer == null) return null;
		else return offer.getoffer();
	}
	public void setprice(float price) {
		this.price = price;
	}
	public void setquantity(int quantity) {
		this.quantity = quantity;
	}
	public void setcategory(category c) {
		this.category = c;
	}
	public void setoffer(offer e) {
		offer = e;
		hasoffer = true;
	}
	public boolean hasoffer() {
		return this.hasoffer;
	}
}

class offer{
	private boolean hasoffer;
	private String offer = null;
	public offer(int i) {
		//if i = 1 then buy one get one 
		//if i = 2 then 25% off
		if(i == 1) {
			offer = "Buy one get one free";
			hasoffer = true;
		}
		if(i == 2) {
			offer = "25% off";
			hasoffer = true;
		}
		
	}
	
	public boolean hasoffer() {
		return this.hasoffer;
	}
	
	public String getoffer() {
		return this.offer;
	}
	
}

class merchant implements member{
	private int rewardslots = 0;
	private String name;
	private ArrayList<category> categories;
	
	public merchant(String name) {
		this.name = name;
		categories = new ArrayList<category>();
	}
	
	public String getname() {
		return this.name;
	}
	
	private void add(String usr_category, item e) {
		boolean newcategory = true;
		for(int i=0;i<categories.size();i++) {
			if(categories.get(i).getcategory().equals(usr_category)) {
				categories.get(i).additem(e);
				newcategory = false;
			}
		}
		if(newcategory) {
			category addcategory = new category(usr_category);
			addcategory.additem(e);
			categories.add(addcategory);
		}
	}
	
	public void edititem(int code, float price, int quantity) {
		boolean ans = false;
		for(int i=0;i<categories.size();i++) {
			if(categories.get(i).edititem(code, price, quantity)) {
				ans = true;
				break;
			}
		}
		if(!ans) System.err.println("Enter a valid code");;
	}

	
	
	@Override
	public void additem(String category, item e) {
		this.add(category,e);
		
	}

	@Override
	public void search(String category) {
		
	}

	@Override
	public void getreward() {
		
	}
	
	
}
interface member{
	public void additem(String category, item e);
	public void search(String category);
	public void getreward();
}

class category{
	private String name;
	private ArrayList<item> items;
	private offer offer = null;
	private int n_items;
	
	
	public category(String name) {
		this.name = name;
		this.n_items = 0;
		items = new ArrayList<item>();
	}
	public void additem(item e) {
		items.add(e);
		e.setcategory(this);
		n_items++ ;
	}
	public String getcategory() {		
		return this.name;
	}
	
	
	public boolean edititem(int code, float price, int quantity) {
		boolean ans = false;
		for(int i=0;i<items.size();i++) {
			if(items.get(i).getid() == code) {
				items.get(i).setprice(price);
				items.get(i).setquantity(quantity);
				ans = true;
			}
		}
		return ans;
	}
	
}

