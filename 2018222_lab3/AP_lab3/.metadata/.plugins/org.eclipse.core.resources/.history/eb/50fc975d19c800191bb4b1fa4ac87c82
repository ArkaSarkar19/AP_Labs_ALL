package archlegends;
import java.util.LinkedList;
public class game {
	final private user thisuser;
	private Hero currhero ;
	private monster currmonster;
	public game(user newuser) {
		this.thisuser = newuser;
	}
	public void sethero(Hero hero) {
		this.currhero = hero;
	}
}

final class gamelayout{
	final private int start = 0;
	final private LinkedList<node> graph[] = new LinkedList[11];
	public gamelayout() {
		for(int i=0;i<11;i++) {
			graph[i] = new LinkedList<node>();
		}
		
		graph[start].add(new node(1,0,1));
		graph[start].add(new node(2,3,4));
		graph[start].add(new node(3,6,7));
		
		for(int i=1;i<8;i=i+3) {
			graph[i].add(new node(1,1,2));
			graph[i].add(new node(2,4,5));
			graph[i].add(new node(3,7,8));
			if(i==1)
			graph[i].add(new node(1,-1,i));
			else if(i==4)
				graph[i].add(new node(2,-1,i));
			else if(i==7)
				graph[i].add(new node(3,-1,i));
			else;
			
		}
		for(int i=2;i<9;i=i+3) {
			graph[i].add(new node(1,2,3));
			graph[i].add(new node(2,5,6));
			graph[i].add(new node(3,8,9));
			graph[i].add(new node(1,-1,i));
			if(i==2)
				graph[i].add(new node(1,-1,i));
			else if(i==5)
				graph[i].add(new node(2,-1,i));
			else if(i==8)
				graph[i].add(new node(3,-1,i));
			else;
		
		}
		for(int i=3;i<10;i=i+3) {
			graph[i].add(new node(4,9,10));
			
			if(i==3)
				graph[i].add(new node(1,-1,i));
			else if(i==6)
				graph[i].add(new node(2,-1,i));
			else if(i==9)
				graph[i].add(new node(3,-1,i));
			else;
		}
	}
	
	
	
}

class node{
	private int monsterlevel;
	private int location;
	private int vertex;
	public node(int monsterlevel, int location, int vertex) {
		this.monsterlevel = monsterlevel;
		this.location = location;
		this.vertex = vertex;
	}
	public int getmonsterlevel() {
		return this.monsterlevel;
	}
	public int getlocation() {
		return this.location;
	}
}